{"version":3,"sources":["components/letter-rack/tile/index.js","constants/index.js","components/letter-rack/index.js","components/hangman/index.js","components/question/index.js","components/answer/word/letter/index.js","components/answer/word/index.js","components/answer/index.js","components/modal/index.js","components/game-over/index.js","utils/index.js","custom-hooks/index.js","components/game/index.js","App.js","serviceWorker.js","index.js"],"names":["LetterTile","_ref","disabled","letter","handleLetterTileClick","react_default","a","createElement","className","type","onClick","KEYS","split","ALPHABET","PUZZLES","question","answer","congrats","LetterRack","pickLetter","pickedLetters","map","letter_rack_tile","includes","key","HangmanIcon","points","id","viewBox","xmlns","transform","d","cx","cy","r","strokeLinejoin","Question","phrase","AnswerLetter","show","AnswerWord","letters","word","i","answer_word_letter","Answer","words","components_answer_word","Modal","children","ReactDOM","createPortal","Fragment","document","getElementById","GameOver","gameOverMessage","lostGame","restart","startNewPuzzle","removeLetterFromString","replace","RegExp","arrayWithIndex","length","Object","toConsumableArray","Array","v","useKeyPress","callback","keysAllowed","handleEvent","e","useEffect","window","addEventListener","removeEventListener","usePuzzle","puzzle","useRef","_useState","useState","drop","_useState2","slicedToArray","puzzlesLeft","setPuzzlesLeft","current","max","next","Math","floor","random","remove","Game","_usePuzzle","_usePuzzle2","getNewPuzzle","setGameOverMessage","_useState3","_useState4","setPoints","_useState5","_useState6","setPickedLetters","toUpperCase","pipe","reduce","trim","equals","append","components_hangman","components_question","components_answer","components_letter_rack","components_modal","game_over","App","components_game","Boolean","location","hostname","match","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ab6def1a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './index.css';\n\nconst LetterTile = ({ disabled, letter, handleLetterTileClick }) => {\n  const handleClick = () => {\n    handleLetterTileClick(letter);\n  };\n\n  return (\n    <button\n      className=\"btn c-letter-tile\"\n      disabled={disabled}\n      type=\"button\"\n      onClick={handleClick}\n    >\n      {letter}\n    </button>\n  );\n};\n\nLetterTile.propTypes = {\n  disabled: PropTypes.bool,\n  letter: PropTypes.string,\n  handleLetterTileClick: PropTypes.func,\n};\n\nexport default LetterTile;\n","const MAX_POINTS = 6;\nconst MSG_LOSE = 'Not quite!  Nice try.';\nconst KEYS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('');\nconst ALPHABET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\n\nconst PUZZLES = [\n  {\n    question: 'What should Kinaxis do?',\n    answer: 'Hire Brad Duck',\n    congrats: 'Good Idea!',\n  },\n  {\n    question: \"What is a Kinaxis' primary product?\",\n    answer: 'Rapid Response',\n    congrats: 'Good thing you got this one right!',\n  },\n  {\n    question: 'Fun Kinaxis core value',\n    answer: 'Laugh Often',\n    congrats: 'A solid life lesson',\n  },\n  {\n    question: 'Finish these lyrics: \"Never gonna...\"',\n    answer: 'give you up',\n    congrats: 'I am so sorry....',\n  },\n];\n\nexport { ALPHABET, MAX_POINTS, MSG_LOSE, KEYS, PUZZLES };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport LetterTile from './tile';\nimport { ALPHABET } from '../../constants';\nimport './index.css';\n\nconst LetterRack = ({ pickLetter, pickedLetters }) => (\n  <div className=\"c-letter-rack\">\n    {ALPHABET.map(letter => (\n      <LetterTile\n        handleLetterTileClick={pickLetter}\n        letter={letter}\n        disabled={pickedLetters.includes(letter)}\n        key={letter}\n      />\n    ))}\n  </div>\n);\n\nLetterRack.propTypes = {\n  pickLetter: PropTypes.func,\n  pickedLetters: PropTypes.array,\n};\n\nexport default LetterRack;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './index.css';\n\nconst HangmanIcon = ({ points }) => (\n  <svg\n    id=\"hangman-icon\"\n    viewBox=\"0 0 257 252\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <g id=\"stand\" transform=\"translate(2, 2)\">\n      <path d=\"M204.5,44.5 L204.5,1.5\" id=\"Line\" />\n      <path d=\"M203.5,1.5 L90.5,1.5\" id=\"Line-2\" />\n      <path d=\"M90.5,1.5 L90.5,245.502049\" id=\"Line-5\" />\n      <path d=\"M0.5,246.5 L183.502732,246.5\" id=\"Line-6\" />\n    </g>\n    {points > 0 && <circle cx=\"206\" cy=\"72\" r=\"25\" />}\n    {points > 1 && <path d=\"M206.5,97.5 L206.5,153.5\" />}\n    {points > 2 && <path d=\"M205.5,117.5 L157.5,104.5\" />}\n    {points > 3 && (\n      <path\n        d=\"M254.5,117.5 L206.5,104.5\"\n        transform=\"translate(230.5, 111) scale(-1, 1) translate(-230.5, -111) \"\n      />\n    )}\n    {points > 4 && (\n      <g id=\"left-leg\" transform=\"translate(162, 153)\">\n        <path d=\"M44.5,0.5 L10.5,51.5\" strokeLinejoin=\"round\" />\n        <path d=\"M10.5,51.5 L0.5,44.5\" />\n      </g>\n    )}\n    {points > 5 && (\n      <g transform=\"translate(206, 153)\">\n        <path\n          d=\"M34.5,0.5 L0.5,51.5\"\n          transform=\"translate(17.5, 26) scale(-1, 1) translate(-17, -26) \"\n        />\n        <path\n          d=\"M44.5,51.5 L34.5,44.5\"\n          transform=\"translate(39.5, 48) scale(-1, 1) translate(-39.5, -48) \"\n        />\n      </g>\n    )}\n  </svg>\n);\n\nHangmanIcon.propTypes = {\n  points: PropTypes.number,\n};\n\nexport default HangmanIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './index.css';\n\nconst Question = ({ phrase }) => (\n  <div className=\"c-question\">\n    <span>{phrase}</span>\n  </div>\n);\n\nQuestion.propTypes = {\n  phrase: PropTypes.string.isRequired,\n};\n\nexport default Question;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './index.css';\n\nconst AnswerLetter = ({ letter, show }) => (\n  <span className=\"c-answer-letter\">{show && letter}</span>\n);\n\nAnswerLetter.propTypes = {\n  letter: PropTypes.string,\n  show: PropTypes.bool,\n};\n\nexport default AnswerLetter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AnswerLetter from './letter';\nimport './index.css';\n\nconst AnswerWord = ({ pickedLetters, word }) => {\n  const letters = word.split('');\n\n  return (\n    <div className=\"c-answer-word\">\n      {letters.map((letter, i) => (\n        <AnswerLetter\n          key={i}\n          letter={letter}\n          show={pickedLetters.includes(letter)}\n        />\n      ))}\n    </div>\n  );\n};\n\nAnswerWord.propTypes = {\n  pickedLetters: PropTypes.array.isRequired,\n  word: PropTypes.string.isRequired,\n};\n\nexport default AnswerWord;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AnswerWord from './word';\nimport './index.css';\n\nconst Answer = ({ phrase, pickedLetters }) => {\n  const words = phrase.split(' ');\n\n  return (\n    <div className=\"c-answer\">\n      {words.map((word, i) => (\n        <AnswerWord key={i} word={word} pickedLetters={pickedLetters} />\n      ))}\n    </div>\n  );\n};\n\nAnswer.propTypes = {\n  phrase: PropTypes.string,\n  pickedLetters: PropTypes.array,\n};\n\nexport default Answer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst Modal = ({ children }) =>\n  ReactDOM.createPortal(\n    <>\n      <div className=\"c-dimmer\" />\n      <div className=\"c-modal\">{children}</div>\n    </>,\n    document.getElementById('modal-root')\n  );\n\nModal.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Modal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst GameOver = ({ gameOverMessage, lostGame, restart, startNewPuzzle }) => (\n  <div className=\"c-game-over\">\n    <span className=\"c-game-over-title\">GAME OVER!!</span>\n    <span className=\"c-game-over-message\">{gameOverMessage}</span>\n    <div className=\"c-game-over-buttons\">\n      {lostGame && (\n        <button className=\"btn\" onClick={restart} type=\"button\">\n          Try again\n        </button>\n      )}\n      {!lostGame && (\n        <button className=\"btn\" onClick={startNewPuzzle} type=\"button\">\n          New Puzzle\n        </button>\n      )}\n    </div>\n  </div>\n);\n\nGameOver.propTypes = {\n  gameOverMessage: PropTypes.string.isRequired,\n  lostGame: PropTypes.bool.isRequired,\n  restart: PropTypes.func.isRequired,\n  startNewPuzzle: PropTypes.func.isRequired,\n};\n\nexport default GameOver;\n","import { replace } from 'ramda';\n\nconst removeLetterFromString = (phrase, letter) =>\n  replace(new RegExp(letter, 'ig'), '', phrase);\n\nconst getRandomInt = max => Math.floor(Math.random() * max);\n\nconst arrayWithIndex = length => [...Array(length)].map((v, i) => i);\n\nexport { arrayWithIndex, getRandomInt, removeLetterFromString };\n","import { useEffect, useRef, useState } from 'react';\nimport { drop, remove } from 'ramda';\nimport { arrayWithIndex, getRandomInt } from '../utils';\nimport { PUZZLES } from '../constants';\n\nconst useKeyPress = (callback, keysAllowed) => {\n  const handleEvent = e => {\n    if (keysAllowed.includes(e.key)) {\n      callback(e.key);\n    }\n  };\n  useEffect(() => {\n    window.document.addEventListener('keyup', handleEvent);\n    return () => {\n      window.document.removeEventListener('keyup', handleEvent);\n    };\n  });\n};\n\nconst usePuzzle = () => {\n  const puzzle = useRef(PUZZLES[0]);\n  const [puzzlesLeft, setPuzzlesLeft] = useState(\n    drop(1, [...arrayWithIndex(PUZZLES.length)])\n  );\n\n  const newPuzzle = () => {\n    const next = getRandomInt(puzzlesLeft.length);\n    puzzle.current = PUZZLES[puzzlesLeft[next]];\n    if (puzzlesLeft.length > 1) {\n      setPuzzlesLeft(remove(next, 1, puzzlesLeft));\n    } else {\n      setPuzzlesLeft([...arrayWithIndex(PUZZLES.length)]);\n    }\n  };\n\n  return [puzzle.current, newPuzzle];\n};\n\nexport { useKeyPress, usePuzzle };\n","import React, { useEffect, useState } from 'react';\nimport { append, equals, length, pipe, reduce, trim } from 'ramda';\nimport LetterRack from '../letter-rack';\nimport HangmanIcon from '../hangman';\nimport Question from '../question';\nimport Answer from '../answer';\nimport Modal from '../modal';\nimport GameOver from '../game-over';\nimport { useKeyPress, usePuzzle } from '../../custom-hooks';\nimport { MAX_POINTS, MSG_LOSE, KEYS } from '../../constants';\nimport { removeLetterFromString } from '../../utils';\nimport './index.css';\n\nconst answerCorrect = phrase =>\n  pipe(\n    reduce(removeLetterFromString, phrase),\n    trim,\n    length,\n    equals(0)\n  );\n\nconst Game = () => {\n  const [puzzle, getNewPuzzle] = usePuzzle();\n  const [gameOverMessage, setGameOverMessage] = useState('');\n  const [points, setPoints] = useState(0);\n  const [pickedLetters, setPickedLetters] = useState([]);\n  useEffect(() => {\n    if (answerCorrect(puzzle.answer.toUpperCase())(pickedLetters)) {\n      setGameOverMessage(puzzle.congrats);\n    } else if (points === MAX_POINTS) {\n      setGameOverMessage(MSG_LOSE);\n    }\n  }, [pickedLetters, points]);\n\n  const pickLetter = letter => {\n    if (!puzzle.answer.toUpperCase().includes(letter)) {\n      setPoints(points + 1);\n    }\n    setPickedLetters(append(letter, pickedLetters));\n  };\n\n  const handleKeyboardInput = letter => {\n    if (gameOverMessage.length) return;\n    if (!pickedLetters.includes(letter.toUpperCase())) {\n      pickLetter(letter.toUpperCase());\n    }\n  };\n  useKeyPress(handleKeyboardInput, KEYS);\n\n  const restart = () => {\n    setPoints(0);\n    setPickedLetters([]);\n    setGameOverMessage(false);\n  };\n\n  const startNewPuzzle = () => {\n    restart();\n    getNewPuzzle();\n  };\n\n  const lostGame = points === MAX_POINTS;\n\n  const handleEnterKey = () => {\n    if (!gameOverMessage.length) return;\n    if (lostGame) {\n      restart();\n    } else {\n      startNewPuzzle();\n    }\n  };\n  useKeyPress(handleEnterKey, ['Enter']);\n\n  return (\n    <div className=\"c-game\">\n      <h1 className=\"c-title\">Duck Hangman!</h1>\n      <HangmanIcon points={points} />\n      <Question phrase={puzzle.question} />\n      <Answer\n        phrase={puzzle.answer.toUpperCase()}\n        pickedLetters={pickedLetters}\n      />\n      <LetterRack pickLetter={pickLetter} pickedLetters={pickedLetters} />\n      {gameOverMessage.length > 0 && (\n        <Modal>\n          <GameOver\n            gameOverMessage={gameOverMessage}\n            lostGame={lostGame}\n            restart={restart}\n            startNewPuzzle={startNewPuzzle}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default Game;\n","import React from 'react';\nimport Game from './components/game';\nimport './App.css';\n\nconst App = () => (\n  <div id=\"modal-root\" className=\"App\">\n    <Game />\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}